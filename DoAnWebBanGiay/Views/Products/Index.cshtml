@model List<DoAnWebBanGiay.Models.Product>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<style>
    /* Tổng thể */
    body {
        background-color: #f8f9fa;
        font-family: 'Arial', sans-serif;
    }

    .container {
        margin-top: 5px;
    }

    h2 {
        font-size: 2.5rem;
        color: #333;
        font-weight: 600;
        margin-bottom: 20px;
    }

    /* Thanh điều hướng danh mục */
    .category-filter {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        justify-content: center;
    }

    .category-link {
        font-size: 1rem;
        padding: 8px 20px;
        border: 1px solid #007bff;
        color: #007bff;
        border-radius: 25px;
        background-color: #fff;
        transition: all 0.3s ease;
        text-decoration: none;
        font-weight: 500;
    }

        .category-link:hover,
        .category-link.active {
            background-color: #007bff;
            color: white;
            transform: translateY(-3px);
        }

    /* Dropdown sắp xếp */
    .sort-form select {
        font-size: 1rem;
        padding: 8px 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    /* Sản phẩm */
    .product-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        text-align: center;
        padding: 15px;
        transition: all 0.3s ease;
        position: relative;
    }

        .product-container:hover {
            transform: translateY(-8px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
        }

    .product_image {
        height: 180px;
        margin-bottom: 15px;
        overflow: hidden;
    }

        .product_image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product_image:hover img {
            transform: scale(1.1);
        }

    .product_name a {
        font-size: 1.1rem;
        font-weight: bold;
        color: #333;
        text-decoration: none;
    }

        .product_name a:hover {
            color: #007bff;
        }

    .product_price {
        font-size: 1.2rem;
        color: #d9534f;
        margin: 10px 0;
        font-weight: bold;
    }

    .btn-primary {
        border-radius: 25px;
        padding: 10px 20px;
        font-size: 0.9rem;
    }

    /* Phân trang */
    .pagination {
        margin-top: 20px;
    }

        .pagination .page-link {
            color: #007bff;
            border: 1px solid #007bff;
            transition: all 0.3s ease;
            font-size: 1rem;
        }

            .pagination .page-link:hover {
                background-color: #007bff;
                color: white;
            }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white;
            border: none;
        }
</style>



<div class="container">
    <!-- Tiêu đề -->
    <h2 class="text-center">@ViewBag.category</h2>

    <!-- Bộ lọc danh mục -->
    <div class="category-filter">
        <a href="@Url.Action("Index", "Products", new { category = "all", sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })" class="category-link @(Request.QueryString["category"] == "all" ? "active" : "")">Tất cả</a>
        <a href="@Url.Action("Index", "Products", new { category = "nam", sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })" class="category-link @(Request.QueryString["category"] == "nam" ? "active" : "")">Nam</a>
        <a href="@Url.Action("Index", "Products", new { category = "nu", sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })" class="category-link @(Request.QueryString["category"] == "nu" ? "active" : "")">Nữ</a>
        <a href="@Url.Action("Index", "Products", new { category = "unisex", sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })" class="category-link @(Request.QueryString["category"] == "unisex" ? "active" : "")">Unisex</a>
    </div>




    <!-- Dropdown sắp xếp -->
    <div class="text-right mb-3">
        <form method="get" action="@Url.Action("Index", "Products")" class="sort-form">
            <input type="hidden" name="category" value="@Request.QueryString["category"]" />
            <input type="hidden" name="search" value="@Request.QueryString["search"]" />
            <select name="sortOrder" onchange="this.form.submit()">
                <option value="">Sắp xếp theo</option>
                <option value="asc" @(Request.QueryString["sortOrder"] == "asc" ? "selected" : "")>Giá: Thấp - Cao</option>
                <option value="desc" @(Request.QueryString["sortOrder"] == "desc" ? "selected" : "")>Giá: Cao - Thấp</option>
            </select>
        </form>
    </div>


    <!-- Danh sách sản phẩm -->
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="product-container">
                    <div class="product_image">
                        <img src="@Url.Content(product.HinhAnh)" alt="@product.ProName" />
                    </div>
                    <div class="product_info">
                        <h6 class="product_name">
                            <a href="@Url.Action("Detail", "Products", new { id = product.ProId })">@product.ProName</a>
                        </h6>
                        <div class="product_price">@String.Format("{0:N0} VND", product.Gia)</div>
                        <a href="@Url.Action("Detail", "Products", new { id = product.ProId })" class="btn btn-primary">Xem Chi Tiết</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Phân trang -->
    <nav>
        <ul class="pagination justify-content-center">
            @if (ViewBag.page > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.page - 1, category = Request.QueryString["category"], sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })">Previous</a>
                </li>
            }
            @for (int i = 1; i <= ViewBag.totalPages; i++)
            {
                <li class="page-item @(ViewBag.page == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, category = Request.QueryString["category"], sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })">@i</a>
                </li>
            }
            @if (ViewBag.page < ViewBag.totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.page + 1, category = Request.QueryString["category"], sortOrder = Request.QueryString["sortOrder"], search = Request.QueryString["search"] })">Next</a>
                </li>
            }
        </ul>
    </nav>


</div>


<script>
    $(document).ready(function () {
        // Hiệu ứng khi cuộn trang
        $(window).scroll(function () {
            $('.animate__animated').each(function () {
                var pos = $(this).offset().top;
                var winTop = $(window).scrollTop();
                if (pos < winTop + 600) {
                    $(this).addClass('animate__fadeIn');
                }
            });
        });

        // Hiệu ứng cho sản phẩm khi cuộn
        $('.product-container').each(function (index) {
            $(this).css('opacity', '0');
            $(this).delay(200 * index).animate({ opacity: 1 }, 600);
        });
    });
</script>